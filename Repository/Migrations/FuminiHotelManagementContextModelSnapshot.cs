// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(FuminiHotelManagementContext))]
    partial class FuminiHotelManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repository.Entity.BookingDetail", b =>
                {
                    b.Property<int>("BookingReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ActualPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("BookingReservationId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("BookingDetails");

                    b.HasData(
                        new
                        {
                            BookingReservationId = 1,
                            RoomId = 1,
                            ActualPrice = 200m,
                            EndDate = new DateOnly(2023, 9, 3),
                            StartDate = new DateOnly(2023, 9, 1)
                        },
                        new
                        {
                            BookingReservationId = 2,
                            RoomId = 2,
                            ActualPrice = 400m,
                            EndDate = new DateOnly(2023, 9, 8),
                            StartDate = new DateOnly(2023, 9, 5)
                        });
                });

            modelBuilder.Entity("Repository.Entity.BookingReservation", b =>
                {
                    b.Property<int>("BookingReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingReservationId"));

                    b.Property<DateOnly?>("BookingDate")
                        .HasColumnType("date");

                    b.Property<byte?>("BookingStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingReservationId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BookingReservations");

                    b.HasData(
                        new
                        {
                            BookingReservationId = 1,
                            BookingDate = new DateOnly(2023, 9, 1),
                            BookingStatus = (byte)1,
                            CustomerId = 1,
                            TotalPrice = 300m
                        },
                        new
                        {
                            BookingReservationId = 2,
                            BookingDate = new DateOnly(2023, 9, 5),
                            BookingStatus = (byte)2,
                            CustomerId = 2,
                            TotalPrice = 450m
                        });
                });

            modelBuilder.Entity("Repository.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateOnly?>("CustomerBirthday")
                        .HasColumnType("date");

                    b.Property<string>("CustomerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("CustomerStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerBirthday = new DateOnly(1990, 1, 1),
                            CustomerFullName = "John Doe",
                            CustomerStatus = (byte)1,
                            EmailAddress = "johndoe@example.com",
                            Password = "password123",
                            Telephone = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerBirthday = new DateOnly(1985, 5, 15),
                            CustomerFullName = "Jane Smith",
                            CustomerStatus = (byte)1,
                            EmailAddress = "janesmith@example.com",
                            Password = "password456",
                            Telephone = "987654321"
                        });
                });

            modelBuilder.Entity("Repository.Entity.RoomInformation", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("RoomDetailDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomMaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RoomPricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("RoomStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomInformations");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            RoomDetailDescription = "A standard room",
                            RoomMaxCapacity = 2,
                            RoomNumber = "101",
                            RoomPricePerDay = 100m,
                            RoomStatus = (byte)1,
                            RoomTypeId = 1
                        },
                        new
                        {
                            RoomId = 2,
                            RoomDetailDescription = "A deluxe room",
                            RoomMaxCapacity = 3,
                            RoomNumber = "102",
                            RoomPricePerDay = 150m,
                            RoomStatus = (byte)1,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("Repository.Entity.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            RoomTypeName = "Standard",
                            TypeDescription = "Basic room",
                            TypeNote = "No note"
                        },
                        new
                        {
                            RoomTypeId = 2,
                            RoomTypeName = "Deluxe",
                            TypeDescription = "Luxurious room",
                            TypeNote = "Includes breakfast"
                        });
                });

            modelBuilder.Entity("Repository.Entity.BookingDetail", b =>
                {
                    b.HasOne("Repository.Entity.BookingReservation", "BookingReservation")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entity.RoomInformation", "Room")
                        .WithMany("BookingDetails")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BookingReservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Repository.Entity.BookingReservation", b =>
                {
                    b.HasOne("Repository.Entity.Customer", "Customer")
                        .WithMany("BookingReservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Repository.Entity.RoomInformation", b =>
                {
                    b.HasOne("Repository.Entity.RoomType", "RoomType")
                        .WithMany("RoomInformations")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Repository.Entity.BookingReservation", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("Repository.Entity.Customer", b =>
                {
                    b.Navigation("BookingReservations");
                });

            modelBuilder.Entity("Repository.Entity.RoomInformation", b =>
                {
                    b.Navigation("BookingDetails");
                });

            modelBuilder.Entity("Repository.Entity.RoomType", b =>
                {
                    b.Navigation("RoomInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
